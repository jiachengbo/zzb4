"use strict";function sendErrStr(e,r){return logger.error(r),e.status(422).send({message:r})}var path=require("path"),util=require("util"),wkx=require("wkx"),config=require(path.resolve("./config/config")),sequelize=require(path.resolve("./config/lib/sequelize")),dbTools=require(path.resolve("./config/private/dbtools")),errorHandler=require(path.resolve("./modules/core/server/controllers/errors.server.controller")),logger=require(path.resolve("./config/lib/logger")).getLogger_FileNameBase(__filename);exports.create=function(e,r){return r.status(422).send({message:"create no complete"})},exports.read=function(e,r){var t=e.model;r.json(t)},exports.update=function(e,r){return r.status(422).send({message:"update no complete"})},exports.delete=function(e,r){return r.status(422).send({message:"delete no complete"})};var mapdef_srid=4,mapdef_shapefield="shape",mapdef_distancefield="distance";exports.list=function(e,r){var t=e.TableModel,s=Number.isNaN(e.TableModel_Srid)?mapdef_srid:e.TableModel_Srid,a={};if(e.query.q){try{a=JSON.parse(e.query.q)}catch(t){return sendErrStr(r,"map list jsonQuery q error:"+e.query.q)}logger.debug("map list jsonQuery:%j",a)}if(e.query.m){var i={};try{i=JSON.parse(e.query.m)}catch(t){return sendErrStr(r,"map list jsonMapParams m error:"+e.query.m)}logger.debug("map list jsonMapParams:%j",i);var n=[],o=[],l=[];if(Array.isArray(i.distanceFromPoint)&&2===i.distanceFromPoint.length){var d=i.distanceFromPoint;if(i.hasOwnProperty("distanceLimit")&&i.distanceLimit>0){var u=util.format("sde.st_distance(%s,(select sde.st_point(%d,%d,%d) from dual))",mapdef_shapefield,d[0],d[1],s);o.push([sequelize.literal(u),mapdef_distancefield]),l.push([sequelize.col(mapdef_distancefield),"ASC"]);var m=util.format("%s < %d",u,i.distanceLimit);n.push(sequelize.literal(m)),i.mapExtent||(i.mapExtent=[d[0]-i.distanceLimit,d[1]-i.distanceLimit,d[0]+i.distanceLimit,d[1]+i.distanceLimit])}else{var f=util.format("sde.st_intersects((select sde.st_point(%d,%d,%d) from dual),%s)",d[0],d[1],s,mapdef_shapefield),p=util.format("%s = 1",f);n.push(sequelize.literal(p))}}else if(i.distanceFromPoint)return sendErrStr(r,"map list jsonMapParams m.distanceFromPoint error:"+e.query.m);if(Array.isArray(i.mapExtent)&&4===i.mapExtent.length){var c=i.mapExtent,g=new wkx.Polygon([new wkx.Point(c[0],c[1]),new wkx.Point(c[2],c[1]),new wkx.Point(c[2],c[3]),new wkx.Point(c[0],c[3]),new wkx.Point(c[0],c[1])]).toWkt(),y=util.format("sde.st_intersects(%s,(select sde.st_polyfromtext('%s',%d) from dual)) = 1",mapdef_shapefield,g,s);n.unshift(sequelize.literal(y))}else if(i.mapExtent)return sendErrStr(r,"map list jsonMapParams m.mapExtent error:"+e.query.m);if(n.length>0&&(a.where||(a.where={}),a.where.$and=n),o.length>0)if(a.attributes)if(Array.isArray(a.attributes))a.attributes=a.attributes.concat(o);else{if("object"!=typeof a.attributes)return sendErrStr(r,"map list jsonQuery q.attributes error:"+e.query.q);a.attributes.include=(a.attributes.include||[]).concat(o)}else a.attributes={include:o};if(l.length>0)if(a.order){if(!Array.isArray(a.order))return sendErrStr(r,"map list jsonQuery q.order need array:"+e.query.q);a.order=a.order.concat(l)}else a.order=l;logger.debug("map list new jsonQuery:%j",JSON.stringify(a))}return!1===config.db.option.mapLogging&&(a.logging=!1),t.findAll(a).then(function(e){r.json(e)}).catch(function(e){return logger.error("map list error:",e),sendErrStr(r,"map list error:"+errorHandler.getErrorMessage(e))})},exports.layerNameByID=function(e,r,t,s){var a;logger.debug("map layerNameByID:",s);var i=dbTools.getModel(s);if(!i)return a="layerName:"+s+" not defined",logger.error(a),sendErrStr(r,a);var n=i.attributes[mapdef_shapefield];if(!n)return a="layerName:"+s+" not "+mapdef_shapefield+" defined",logger.error(a),sendErrStr(r,a);e.TableModel_Srid=parseInt(n.type.srid,10),e.TableModel=i,t()},exports.objectByID=function(e,r,t,s){if(logger.debug("objectbyid:",s),!e.TableModel){var a="objectId:"+s+" not defined layerName";return logger.error(a),r.status(422).send({message:a})}e.TableModel.findById(s).then(function(r){if(!r)throw new Error("layerName "+e.TableModel.name+" objectdbyid find "+s+" return null");e.model=r,t()}).catch(function(e){return logger.error("objectByID error:",e.message),r.status(422).send({message:errorHandler.getErrorMessage(e)})})};