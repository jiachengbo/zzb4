"use strict";function torecChanged(e){var r=require(path.resolve("./modules/global/server/sockets/server.server.socket"));r.emit(r.EVENTTYPE.TORECCHANGED,e)}function updateWhere(e,r){return function e(t){if("string"==typeof t){if("$$owner"===t)return r;if("$$owners"===t)return{$like:"%,"+r+",%"}}else{if(Array.isArray(t)){for(var n=[],o=0;o<t.length;o++)n[o]=e(t[o]);return n}if("[object Object]"===toString.call(t)){if(t._isSequelizeMethod)return t;var s={},c=[];for(var a in t)if(t.hasOwnProperty(a))if("$$owner"===a||"$$owners"===a){var i=parseInt(t[a],10);isNaN(i)&&(i=r);var u;u="$$owner"===a?"act_userid="+i:"act_recvuserid like ',"+i+",'";var d=sequelize.literal(util.format("exists(select 1 from %s Act where Act.rec_id=%s.id and Act.%s)",dbTools.getModelTableName("J_rec_act"),dbTools.getModelTableName("Torec"),u));c.push(d)}else if("$and"===a){var l=e(t.$and);Array.isArray(l)?c=c.concat(l):c.push(l)}else s[a]=e(t[a]);return c.length>0&&(s.$and=c),s}}return t}(e)}var path=require("path"),_=require("lodash"),util=require("util"),config=require(path.resolve("./config/config")),sequelize=require(path.resolve("./config/lib/sequelize")),dbTools=require(path.resolve("./config/private/dbtools")),errorHandler=require(path.resolve("./modules/core/server/controllers/errors.server.controller")),torecAct=require(path.resolve("./modules/private/server/controllers/torec-act.server.controller")),logger=require(path.resolve("./config/lib/logger")).getLogger_FileNameBase(__filename);const RECSTATES=dbTools.getBaseCodesObj("J_rec_state",null,"code","id"),RECACT=dbTools.getBaseCodesObj("J_rec_actcode",null,"code","id"),AUTHORIZE=dbTools.getBaseCodesObj("J_rec_authorize",null,"code","id");var Torec=sequelize.model("Torec"),J_rec_act=sequelize.model("J_rec_act"),J_rec_calc=sequelize.model("J_rec_calc"),Tocallrecord=sequelize.model("Tocallrecord"),dbLogging=!1===config.db.option.torecLogging?{logging:!1}:{};exports.create=function(e,r){var t,n;return sequelize.transaction(dbLogging,function(o){var s=Object.assign({transaction:o},dbLogging);return torecAct.ctrlAct(e,r).then(function(r){if(logger.debug("user %s(%s) torec create, ctrlact rec casenum %s, ret:",e.user.username,e.user.displayName,r.casenum,r),t=r,n=Torec.build(t),t.crd)return Tocallrecord.create(t.crd,s)}).then(function(e){return e&&(n.callid=e.id,n.set("crd",e,{raw:!0})),n.save(s)}).then(function(){return J_rec_calc.create(Object.assign({id:n.get("id")},t.calc),s)}).then(function(){return n.createAct(t.act,s)})}).then(function(e){n.set("act",[e],{raw:!0}),r.json(n),torecChanged(n)}).catch(function(t){return logger.error("user %s(%s) torec create error:",e.user.username,e.user.displayName,t),r.status(422).send({message:errorHandler.getErrorMessage(t)})})},exports.update=function(e,r){var t,n=e.model,o=n.get("act");return sequelize.transaction(dbLogging,function(s){var c=Object.assign({transaction:s},dbLogging);return torecAct.ctrlAct(e,r,n).then(function(r){if(r.act.act_id!==RECACT.LOCK&&logger.debug("user %s(%s) torec update, ctrlact rec id %d, casenum %s, ret:",e.user.username,e.user.displayName,n.id,n.casenum,r),t=r,t.crd)return n.crd?n.crd.update(t.crd,c):Tocallrecord.create(t.crd,c)}).then(function(e){if(e&&(t.callid=e.id,n.set("crd",e,{raw:!0}),delete t.crd),t.calc)return n.calc?n.calc.update(t.calc,c):J_rec_calc.create(Object.assign({id:n.get("id")},t.calc),c)}).then(function(e){return e&&delete t.calc,n.createAct(t.act,c)}).then(function(e){o&&Array.isArray(o)?o.push(e):o=[e],n.set("act",o,{raw:!0}),delete t.act;var r=t.where;return delete t.where,r?(r.id=n.id,Torec.update(t,Object.assign({where:r},c))):n.update(t,c)}).then(function(e){if(Array.isArray(e)){if(1!==e[0])throw new Error("torec update one record warning:"+JSON.stringify(e));Object.assign(n,t)}})}).then(function(){r&&r.json(n),torecChanged(n)}).catch(function(t){return logger.error("user %s(%s) torec update error:",e.user.username,e.user.displayName,errorHandler.getErrorMessage(t)),r&&r.status(422).send({message:errorHandler.getErrorMessage(t)}),t})},exports.delete=function(e,r){var t=e.model;return sequelize.transaction(dbLogging,function(e){var r=Object.assign({transaction:e},dbLogging);return t.destroy(r).then(function(){})}).then(function(){r.json(t)}).catch(function(e){return logger.error("torec delete error:",e),r.status(422).send({message:errorHandler.getErrorMessage(e)})})},exports.list=function(e,r){var t={};"string"==typeof e.query.q?t=JSON.parse(e.query.q):Object.assign(t,e.query.q),logger.debug("user %s(%s) torec list jsonQuery:%j",e.user.username,e.user.displayName,t),t.where&&(t.where=updateWhere(t.where,e.user.id),logger.debug("torec list jsonQuery new where:%j",t.where)),t=Object.assign(t,dbLogging);var n=e.query.f;if(!n)return Torec.findAll(Object.assign({include:[{model:Tocallrecord,as:"crd"}],order:"id DESC"},t)).then(function(e){var t=[],n=[];return e.forEach(function(e){t.push(e.getAct(Object.assign({order:"act_time ASC"},dbLogging))),n.push(e.getCt(Object.assign({order:"id ASC"},dbLogging)))}),Promise.all(t).then(function(r){for(var t=0;t<e.length;t++)e[t].set("act",r[t],{raw:!0});return Promise.all(n)}).then(function(t){for(var n=0;n<e.length;n++)e[n].set("ct",t[n],{raw:!0});r.json(e)})}).catch(function(t){return logger.error("user %s(%s) torec list error:",e.user.username,e.user.displayName,t),r.status(422).send({message:errorHandler.getErrorMessage(t)})});switch(n){case"getCount":Torec.count(t).then(function(e){r.json({count:e})}).catch(function(e){logger.error("list function getCount error:",e),r.status(422).send({message:"list function getCount error"})});break;case"getIds":J_rec_act.findAll(Object.assign({where:{act_userid:e.user.id},order:"rec_id ASC",attributes:[[sequelize.fn("DISTINCT",sequelize.col("rec_id")),"rec_id"]]},t)).then(function(e){r.json({ids:e.map(function(e){return e.rec_id})})}).catch(function(e){logger.error("list function getIds error:",e),r.status(422).send({message:"list function getIds error"})});break;default:logger.error("list function "+n+"not defined error."),r.status(422).send({message:"list function "+n+"not defined error."})}},exports.read=function(e,r){var t=e.model,n=e.query.f;if(n)switch(n){case"getCanActs":var o=torecAct.getStateCanActs(t,e.user);r.json({data:o});break;default:logger.error("read function "+n+" not defined error."),r.status(422).send({message:"read function "+n+" not defined error."})}else r.json(t)},exports.torecByID=function(e,r,t,n){Torec.findById(n,Object.assign({include:[{model:Tocallrecord,as:"crd"},{model:J_rec_calc,as:"calc"}]},dbLogging)).then(function(o){if(o)return o.getAct(Object.assign({order:"act_time ASC"},dbLogging)).then(function(e){return o.set("act",e,{raw:!0}),o.getCt(Object.assign({order:"id ASC"},dbLogging))}).then(function(r){o.set("ct",r,{raw:!0}),e.model=o,t()});logger.error("torec findbyid find null error id=",n),r.status(422).send({message:"Failed to load torec id "+n})}).catch(function(e){logger.error("torec findbyid error:",e),r.status(422).send({message:errorHandler.getErrorMessage(e)})})};