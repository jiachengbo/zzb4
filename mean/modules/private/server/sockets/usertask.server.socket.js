"use strict";function UserTask(e,t){putils.GroupData.call(this,!1,null,function(e,t){if(e.id===t.id)return 0}),this.mhCfgList=e,t&&"string"==typeof t||(t="userTask"),this.logger=require(path.resolve("./config/lib/logger")).getLogger(t)}var path=require("path"),config=require(path.resolve("./config/config")),putils=require(path.resolve("./config/private/utils")),RESULT=require(path.resolve("./modules/private/server/sockets/const.server.socket")).RESULT,sequelize=require(path.resolve("./config/lib/sequelize")),CommTaskM=sequelize.model("CommTask"),dbLogging=!1===config.db.option.commTaskLogging?{logging:!1}:{};UserTask.prototype=Object.create(putils.GroupData.prototype),module.exports=UserTask,UserTask.prototype._addTask=function(e,t){if(this.isValidUser(e)){var r=putils.getObjId(e),s=this.add(r,t);return this._userSendIsRunning(e)||this._startSendTask(e,100),s}return 0},UserTask.prototype._haveTask=function(e,t){},UserTask.prototype._addWaitTask=function(e,t){function r(){for(var t=Date.now()+1e3;i.length>0&&i[0].nextRunDt<=t;)s._addTask(e,i.shift());if(i.length>0){var o=i[0].nextRunDt-Date.now();n.waitCmdTimeout=setTimeout(r,o<0?0:o)}}var s=this,n=this.getGroup(putils.getObjId(e));if(!n)return!1;var o=t.msgarg&&t.msgarg.retryTimeout?t.msgarg.retryTimeout:1e3;t.nextRunDt=Date.now()+o;for(var i=n.waitCmd,u=0;u<i.length;u++){if(i[u].nextRunDt>=t.nextRunDt){i.splice(u,0,t),t=null;break}}t&&i.push(t);var a=i[0].nextRunDt-Date.now();n.waitCmdTimeout&&clearTimeout(n.waitCmdTimeout),n.waitCmdTimeout=setTimeout(r,a<0?0:a)},UserTask.prototype._getUserObj=function(e){var t=this.getGroup(putils.getObjId(e));return t?t.user:null},UserTask.prototype._getNextRunRec=function(e){var t=this.getGroup(putils.getObjId(e));return!t||t.length<1?null:t.runRec?null:(t.runRec=t.shift(),t.runRec)},UserTask.prototype._userSendIsRunning=function(e){var t=this.getGroup(putils.getObjId(e));return!!t&&!!t.runRec},UserTask.prototype._clearRunRec=function(e){var t=this.getGroup(putils.getObjId(e));return t&&t.runRec?(delete t.runRec,1):0},UserTask.prototype._startSendTask=function(e,t){return this.isValidUser(e)?this._userSendIsRunning(e)?void this.logger.error("startsendtask user %s commtask not valid or current running",putils.getObjId(e,"username")):void setTimeout(this._runSendTask.bind(this),t,e):void this.logger.error("startsendtask user %s not valid",putils.getObjId(e,"username"))},UserTask.prototype._runSendTask=function(e){if("object"!=typeof e){var t=this._getUserObj(e);"object"==typeof t&&(e=t)}var r=this.getUserSocket(e);if(!r)return void this.logger.warn("runSendTask user %s no valid socket",putils.getObjId(e,"username"));var s=this._getNextRunRec(e);if(s){var n=this.mhCfgList.getCommand(s.msgcode);if(!n)return this.logger.error("runSendTask user %s commTask.id %d commTask.msgcode %s no command error",putils.getObjId(e,"username"),s.id,s.msgcode),void this._clearRunRec(e);var o=this,i=new n(r,s);return this.logger.info("runSendTask user %s commTask.msgcode %s",putils.getObjId(e,"username"),s.msgcode),i.run().then(function(e){return s.update(e,dbLogging)}).then(function(){o._clearRunRec(e),s.result===RESULT.NOCOMPLETE?(o.logger.info("runSendTask user %s commTask.msgcode %s continue",putils.getObjId(e,"username"),s.msgcode),o._addWaitTask(e,s)):(o.logger.info("runSendTask user %s commTask.msgcode %s end result %d",putils.getObjId(e,"username"),s.msgcode,s.result),o._startSendTask(e,100))}).catch(function(t){o.logger.error("runSendTask user %s commTask.msgcode %s error:",putils.getObjId(e,"username"),s.msgcode,t),o._clearRunRec(e),o._startSendTask(e,100)})}},UserTask.prototype._runRecvTask=function(e){var t=this.getUserSocket(e);if(!t)return void this.logger.warn("_runRecvTask user %s no valid socket",putils.getObjId(e,"username"));var r=this,s=this.getGroup(putils.getObjId(e)),n=s.reqList=[];this.mhCfgList.getReqMsgCfgs().forEach(function(s){var o=new s.request(t,s.msgcode,s.options);n.push(o),o.on(o.REQEND,function(t){r.logger.info("_runRecvTask recv user %s request %s run goodend",putils.getObjId(e,"username"),s.msgcode),r.insertRecvRec(e,s,t)}),o.on(o.REQERROR,function(t){r.logger.error("_runRecvTask recv user %s request run errorend:",putils.getObjId(e,"username"),t),t||r.insertRecvRec(e,s,t)}),o.listen(o.recvRequestCallBack)})},UserTask.prototype.callRecvRequest=function(e,t){var r=putils.getObjId(e),s=this.getGroup(r);if(!s)throw new Error("not find user:"+e);var n,o,i=s.reqList;for(o=0;o<i.length&&(n=i[o],n.msgcode!==t.msgcode);o++);if(o>=i.length)throw new Error("not find recvTask:"+t.msgcode);n.recvRequestCallBack.apply(n,Array.prototype.slice.call(arguments,2))},UserTask.prototype.insertSendRec=function(e,t,r,s){var n=Object.assign({user:String(putils.getObjId(e)),first_time:new Date,msgcode:t.msgcode,msgarg:t.options,msgsend:r,reqid:null,attempttimes:0,result:0},"object"==typeof s?s:{});return CommTaskM.create(n,dbLogging)},UserTask.prototype.insertRecvRec=function(e,t,r){var s=Object.assign({user:String(putils.getObjId(e)),msgcode:t.msgcode,msgarg:t.options},r);return CommTaskM.create(s,dbLogging)},UserTask.prototype._loadSendTasks=function(e){var t=this,r=putils.getObjId(e),s=JSON.stringify({loss:!0});return s=s.substring(1,s.length-1),CommTaskM.update({result:RESULT.LOSSSCLEAR},Object.assign({where:{user:String(r),result:RESULT.NOCOMPLETE,reqid:null,msgarg:{$like:"%"+s+"%"}}},dbLogging)).then(function(e){return CommTaskM.findAll(Object.assign({where:{user:String(r),result:RESULT.NOCOMPLETE,reqid:null,first_time:{$gt:new Date(Date.now()-2592e6)}},order:"id ASC"},dbLogging))}).then(function(s){return s.length>0&&(s.forEach(function(e){t.add(r,e)}),t._startSendTask(e,5e3)),t.logger.info("user %s loadsendtasks %d records",putils.getObjId(e,"username"),s.length),s})},UserTask.prototype.loadSendErrorTasks=function(e){var t=this,r=putils.getObjId(e),s=JSON.stringify({loss:!1});return s=s.substring(1,s.length-1),CommTaskM.findAll(Object.assign({where:{user:String(r),result:{$lt:RESULT.NOCOMPLETE},reqid:null,msgarg:{$like:"%"+s+"%"},first_time:{$gt:new Date(Date.now()-2592e6)}},order:"id ASC"},dbLogging)).then(function(s){return s.length>0&&(s.forEach(function(e){t.add(r,e)}),t._startSendTask(e,5e3)),t.logger.info("user %s loadsenderrortasks %d records",putils.getObjId(e,"username"),s.length),s})},UserTask.prototype.runTask=function(e,t){this.initUser(e,t);var r=this;return this._loadSendTasks(e).then(function(){return r._runRecvTask(e)}).catch(function(e){r.logger.error("runtask error:",e)})},UserTask.prototype.addSendRecs=function(e,t,r,s){if(!t||!t.command){var n="addrectasks msghandlecfg not valid command error";return this.logger.error(n),Promise.reject(new Error(n))}Array.isArray(e)||(e=[e]);var o=this,i=[];return e.forEach(function(e){i.push(o.insertSendRec(e,t,r,s))}),Promise.all(i).then(function(t){for(var r=0;r<e.length;r++)o._addTask(e[r],t[r])})},UserTask.prototype.getUserSocket=function(e){var t=this.getGroup(putils.getObjId(e));return t?t.socket:null},UserTask.prototype.initUser=function(e,t){var r=putils.getObjId(e),s=this.getGroup(r);s&&this.clearUser(e),s=[],s.user=e,s.socket=t,s.reqList=null,s.runRec=null,s.waitCmd=[],s.waitCmdTimeout=null,this.setGroup(r,s)},UserTask.prototype.isValidUser=function(e){var t=putils.getObjId(e);return!!this.getGroup(t)},UserTask.prototype.clearUser=function(e){var t=putils.getObjId(e),r=this.getGroup(t);if(r)return r.waitCmdTimeout&&(clearTimeout(r.waitCmdTimeout),r.waitCmdTimeout=null,delete r.waitCmdTimeout),delete r.waitCmd,r.reqList&&(r.reqList.forEach(function(e){e.stopListen(),e.removeAllListeners()}),delete r.reqList),delete r.user,delete r.socket,delete r.runRec,this.removeGroup(t)};